{"ast":null,"code":"import uuid from 'uuid/v4';\n\nconst SongReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_SONG':\n      return [...state, {\n        title: action.song.title,\n        artist: action.song.artist,\n        id: uuid(),\n        url: action.song.url\n      }];\n\n    case 'REMOVE_SONG':\n      return [state.filter(song => song.id !== action.id) // o \"state\" se refere às songs\n      ];\n\n    case 'TOGGLE_SONG':\n      return [];\n\n    default:\n      return state;\n  }\n};\n\nexport default SongReducer; // //toggleLike\n// const toggleLike = songId => {\n//   const updatedSongs = songs.map(song =>\n//     song.id === songId ? { ...song, like: !song.like } : song\n//   );\n//   setSongs(updatedSongs);\n// };","map":{"version":3,"sources":["/Users/pilatus/Desktop/player/song-list/src/reducers/SongReducer.js"],"names":["uuid","SongReducer","state","action","type","title","song","artist","id","url","filter"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,SAAjB;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACE,aAAO,CACL,GAAGF,KADE,EAEL;AACEG,QAAAA,KAAK,EAAEF,MAAM,CAACG,IAAP,CAAYD,KADrB;AAEEE,QAAAA,MAAM,EAAEJ,MAAM,CAACG,IAAP,CAAYC,MAFtB;AAGEC,QAAAA,EAAE,EAAER,IAAI,EAHV;AAIES,QAAAA,GAAG,EAAEN,MAAM,CAACG,IAAP,CAAYG;AAJnB,OAFK,CAAP;;AASF,SAAK,aAAL;AACE,aAAO,CACLP,KAAK,CAACQ,MAAN,CAAaJ,IAAI,IAAIA,IAAI,CAACE,EAAL,KAAYL,MAAM,CAACK,EAAxC,CADK,CAEL;AAFK,OAAP;;AAIF,SAAK,aAAL;AACE,aAAO,EAAP;;AACF;AACE,aAAON,KAAP;AAnBJ;AAqBD,CAtBD;;AAwBA,eAAeD,WAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import uuid from 'uuid/v4';\n\nconst SongReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_SONG':\n      return [\n        ...state,\n        {\n          title: action.song.title,\n          artist: action.song.artist,\n          id: uuid(),\n          url: action.song.url\n        }\n      ];\n    case 'REMOVE_SONG':\n      return [\n        state.filter(song => song.id !== action.id)\n        // o \"state\" se refere às songs\n      ];\n    case 'TOGGLE_SONG':\n      return [];\n    default:\n      return state;\n  }\n};\n\nexport default SongReducer;\n\n// //toggleLike\n// const toggleLike = songId => {\n//   const updatedSongs = songs.map(song =>\n//     song.id === songId ? { ...song, like: !song.like } : song\n//   );\n//   setSongs(updatedSongs);\n// };\n"]},"metadata":{},"sourceType":"module"}